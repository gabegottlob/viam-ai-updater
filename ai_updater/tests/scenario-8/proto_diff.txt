diff --git a/lib/src/gen/component/gripper/v1/gripper.pbgrpc.dart b/lib/src/gen/component/gripper/v1/gripper.pbgrpc.dart
index c438e6efb4b..3a12e73db55 100644
--- a/lib/src/gen/component/gripper/v1/gripper.pbgrpc.dart
+++ b/lib/src/gen/component/gripper/v1/gripper.pbgrpc.dart
@@ -46,6 +46,10 @@ class GripperServiceClient extends $grpc.Client {
       '/viam.component.gripper.v1.GripperService/GetGeometries',
       ($16.GetGeometriesRequest value) => value.writeToBuffer(),
       ($core.List<$core.int> value) => $16.GetGeometriesResponse.fromBuffer(value));
+  static final _$getKinematics = $grpc.ClientMethod<$16.GetKinematicsRequest, $16.GetKinematicsResponse>(
+      '/viam.component.gripper.v1.GripperService/GetKinematics',
+      ($16.GetKinematicsRequest value) => value.writeToBuffer(),
+      ($core.List<$core.int> value) => $16.GetKinematicsResponse.fromBuffer(value));
 
   GripperServiceClient($grpc.ClientChannel channel,
       {$grpc.CallOptions? options,
@@ -76,6 +80,10 @@ class GripperServiceClient extends $grpc.Client {
   $grpc.ResponseFuture<$16.GetGeometriesResponse> getGeometries($16.GetGeometriesRequest request, {$grpc.CallOptions? options}) {
     return $createUnaryCall(_$getGeometries, request, options: options);
   }
+
+  $grpc.ResponseFuture<$16.GetKinematicsResponse> getKinematics($16.GetKinematicsRequest request, {$grpc.CallOptions? options}) {
+    return $createUnaryCall(_$getKinematics, request, options: options);
+  }
 }
 
 @$pb.GrpcServiceName('viam.component.gripper.v1.GripperService')
@@ -125,6 +133,13 @@ abstract class GripperServiceBase extends $grpc.Service {
         false,
         ($core.List<$core.int> value) => $16.GetGeometriesRequest.fromBuffer(value),
         ($16.GetGeometriesResponse value) => value.writeToBuffer()));
+    $addMethod($grpc.ServiceMethod<$16.GetKinematicsRequest, $16.GetKinematicsResponse>(
+        'GetKinematics',
+        getKinematics_Pre,
+        false,
+        false,
+        ($core.List<$core.int> value) => $16.GetKinematicsRequest.fromBuffer(value),
+        ($16.GetKinematicsResponse value) => value.writeToBuffer()));
   }
 
   $async.Future<$25.OpenResponse> open_Pre($grpc.ServiceCall call, $async.Future<$25.OpenRequest> request) async {
@@ -151,10 +166,15 @@ abstract class GripperServiceBase extends $grpc.Service {
     return getGeometries(call, await request);
   }
 
+  $async.Future<$16.GetKinematicsResponse> getKinematics_Pre($grpc.ServiceCall call, $async.Future<$16.GetKinematicsRequest> request) async {
+    return getKinematics(call, await request);
+  }
+
   $async.Future<$25.OpenResponse> open($grpc.ServiceCall call, $25.OpenRequest request);
   $async.Future<$25.GrabResponse> grab($grpc.ServiceCall call, $25.GrabRequest request);
   $async.Future<$25.StopResponse> stop($grpc.ServiceCall call, $25.StopRequest request);
   $async.Future<$25.IsMovingResponse> isMoving($grpc.ServiceCall call, $25.IsMovingRequest request);
   $async.Future<$16.DoCommandResponse> doCommand($grpc.ServiceCall call, $16.DoCommandRequest request);
   $async.Future<$16.GetGeometriesResponse> getGeometries($grpc.ServiceCall call, $16.GetGeometriesRequest request);
+  $async.Future<$16.GetKinematicsResponse> getKinematics($grpc.ServiceCall call, $16.GetKinematicsRequest request);
 }
